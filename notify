--CONFIG
getgenv().webhook = "https://discord.com/api/webhooks/1412573439662755991/totZqF-N-QytqQxFKM4GirpDF4j1Hjjyiy_a-RXBUdnjtg-4MAfW-Ve0h054IyvH8WiG"
getgenv().websiteEndpoint = nil
getgenv().serverHopDelay = 2 -- Tempo em segundos antes de trocar de servidor se n√£o encontrar pets
getgenv().webhookCooldown = 80 -- Tempo em segundos entre envios de webhook

-- Allowed place IDs
local allowedPlaceIds = {
    [96342491571673] = true, -- New Players Server
    [109983668079237] = true -- Normal
}

getgenv().TargetPetNames = {
    "Graipuss Medussi",
    "La Grande Combinasion", "Garama and Madundung", "Los Nooo My Hotspotsitos",
    "Pot Hotspot", "Nuclearo Dinossauro", "Chicleteira Bicicleteira", 
    "Los Combinasionas", "Dragon Cannelloni", "Strawberry Elephant",
    "La Supreme Combinasion", "Esok Sekolah", "Los Hotspotsitos",
    "Ketupat Kepat", "Spaghetti Tualetti", "Nooo My Hotspot",
    "Meowl", "To to to Sahur", "Los Chicleteiras",
    "Ketchuru and Musturu", "Money Money Puggy", "Tictac Sahur",
    "Quesadilla Crocodila", "Tacorita Bicicleta", "La Sahur Combinasion",
    "Las Sis", "Celularcini Viciosini", "Los Bros", "Tralaledon",
    "Los Tacoritas", "Los Primos", "La Spooky Grande", "Los 67",
    "Los Mobilis", "La Extinct Grande", "Mariachi Corazoni", "67",
    "Mieteteira Bicicleteira", "La Secret Combinasion", 
    "Tang Tang Kelentang", "Burguro And Fryuro",
   
}

-- SERVICES
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer

-- PRIVATE SERVER CHECK (works for VIP + Reserved)
local function isPrivateServer()
    return (game.PrivateServerId and game.PrivateServerId ~= "")
        or (game.VIPServerId and game.VIPServerId ~= "")
end

local function buildJoinLink(placeId, jobId)
    return string.format(
        "https://chillihub1.github.io/chillihub-joiner/?placeId=%d&gameInstanceId=%s",
        placeId,
        jobId
    )
end

-- KICK CHECKS
if isPrivateServer() then
    LocalPlayer:Kick("Kicked because in private server")
    return
elseif not allowedPlaceIds[game.PlaceId] then
    local joinLink = buildJoinLink(game.PlaceId, game.JobId)
    LocalPlayer:Kick("Kicked because wrong game\nClick to join server:\n" .. joinLink)
    return
end

-- WEBHOOK SEND
local function sendWebhook(foundPets, jobId)
    local petCounts = {}
    for _, pet in ipairs(foundPets) do
        petCounts[pet] = (petCounts[pet] or 0) + 1
    end

    local formattedPets = {}
    for petName, count in pairs(petCounts) do
        table.insert(formattedPets, petName .. (count > 1 and " x" .. count or ""))
    end

    local joinLink = buildJoinLink(game.PlaceId, jobId)

    local embedData = {
        username = "Clufin Notify Free",
        embeds = { {
            title = "üêæ Pet(s) Found!",
            description = "**Pet(s):**\n" .. table.concat(formattedPets, "\n"),
            color = 65280,
            fields = {
                {
                    name = "Players",
                    value = string.format("%d/%d", #Players:GetPlayers(), Players.MaxPlayers),
                    inline = true
                },
                {
                    name = "Job ID",
                    value = jobId,
                    inline = true
                },
                {
                    name = "Join Link",
                    value = string.format("[Click to join server](%s)", joinLink),
                    inline = false
                }
            },
            footer = { text = "Free Notify" },
            timestamp = DateTime.now():ToIsoDate()
        } }
    }

    local jsonData = HttpService:JSONEncode(embedData)
    local req = http_request or request or (syn and syn.request)
    if req then
        local success, err = pcall(function()
            req({
                Url = getgenv().webhook,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = jsonData
            })
        end)
        if success then
            print("‚úÖ Webhook sent")
        else
            warn("‚ùå Webhook failed:", err)
        end
    else
        warn("‚ùå No HTTP request function available")
    end
end

-- PET CHECK
local function checkForPets()
    local found = {}
    local foundSet = {} -- Para evitar duplicatas
    
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") then
            local objNameLower = string.lower(obj.Name)
            for _, target in pairs(getgenv().TargetPetNames) do
                local targetLower = string.lower(target)
                if string.find(objNameLower, targetLower) then
                    -- Usa o nome do target (da lista), n√£o o nome do objeto
                    if not foundSet[target] then
                        table.insert(found, target)
                        foundSet[target] = true
                    end
                    break
                end
            end
        end
    end
    return found
end

-- SERVER HOP FUNCTION
local function serverHop()
    print("üîÑ Procurando novo servidor...")
    
    local servers = {}
    local cursor = ""
    local attempts = 0
    local maxAttempts = 5
    
    -- Busca servidores dispon√≠veis
    repeat
        attempts = attempts + 1
        local success, result = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(
                string.format(
                    "https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100&cursor=%s",
                    game.PlaceId,
                    cursor
                )
            ))
        end)
        
        if success and result.data then
            for _, server in pairs(result.data) do
                -- Ignora o servidor atual, servidores cheios e servidores com menos de 4 pessoas
                if server.id ~= game.JobId and server.playing < server.maxPlayers and server.playing >= 4 then
                    table.insert(servers, server)
                end
            end
            cursor = result.nextPageCursor or ""
        else
            warn("‚ùå Erro ao buscar servidores")
            break
        end
        
        task.wait(0.5)
    until cursor == "" or attempts >= maxAttempts
    
    -- Tenta entrar em um servidor
    if #servers > 0 then
        -- Embaralha a lista de servidores
        for i = #servers, 2, -1 do
            local j = math.random(1, i)
            servers[i], servers[j] = servers[j], servers[i]
        end
        
        -- Tenta entrar nos servidores (tenta at√© 10 servidores)
        local maxServerTries = math.min(10, #servers)
        for i = 1, maxServerTries do
            local server = servers[i]
            
            -- Verifica se o servidor tem pelo menos 4 pessoas
            if server.playing < 4 then
                print(string.format("‚ö†Ô∏è Servidor com poucas pessoas (%d/%d), pulando...", 
                    server.playing, server.maxPlayers))
                task.wait(0.2)
            -- Pula servidores que est√£o muito cheios (90%+ capacidade)
            elseif server.playing >= server.maxPlayers * 0.9 then
                print(string.format("‚ö†Ô∏è Servidor quase cheio (%d/%d), pulando...", 
                    server.playing, server.maxPlayers))
                task.wait(0.2)
            else
                local success, err = pcall(function()
                    print(string.format("üöÄ Tentando entrar em servidor (%d/%d players)...", 
                        server.playing, server.maxPlayers))
                    TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, LocalPlayer)
                end)
                
                if success then
                    print("‚úÖ Teleportando para novo servidor...")
                    return true
                else
                    warn("‚ùå Falha ao entrar no servidor:", err)
                    print("üîÑ Tentando pr√≥ximo servidor...")
                end
                
                task.wait(1)
            end
        end
    end
    
    -- Se n√£o conseguiu encontrar servidor, tenta teleporte normal
    print("üîÑ Tentando teleporte normal...")
    local success = pcall(function()
        TeleportService:Teleport(game.PlaceId, LocalPlayer)
    end)
    
    if success then
        print("‚úÖ Teleportando...")
        return true
    else
        warn("‚ùå Falha no teleporte")
        return false
    end
end

-- MAIN LOOP
local timeSinceLastFind = 0
local checkInterval = 2 -- Checa a cada 2 segundos
local lastWebhookTime = 0

task.spawn(function()
    while true do
        local petsFound = checkForPets()
        if #petsFound > 0 then
            print("‚úÖ Pets found:", table.concat(petsFound, ", "))
            
            -- Envia webhook apenas se passou o tempo de cooldown
            local currentTime = tick()
            if currentTime - lastWebhookTime >= getgenv().webhookCooldown then
                sendWebhook(petsFound, game.JobId)
                lastWebhookTime = currentTime
                print(string.format("üì§ Webhook enviada. Pr√≥xima em %d segundos", getgenv().webhookCooldown))
                
                -- Aguarda 5 segundos e depois troca de servidor
                print("‚è≥ Aguardando 5 segundos antes de trocar de servidor...")
                task.wait(5)
                print("üîÑ Trocando de servidor ap√≥s encontrar pets...")
                serverHop()
                break
            else
                local timeRemaining = math.ceil(getgenv().webhookCooldown - (currentTime - lastWebhookTime))
                print(string.format("‚è≥ Webhook em cooldown. Aguarde %d segundos", timeRemaining))
            end
            
            timeSinceLastFind = 0
            task.wait(checkInterval)
        else
            print("üîç No pets found")
            timeSinceLastFind = timeSinceLastFind + checkInterval
            
            -- Server hop se passou o tempo limite sem encontrar pets
            if timeSinceLastFind >= getgenv().serverHopDelay then
                print(string.format("‚è∞ %d segundos sem encontrar pets. Trocando de servidor...", 
                    getgenv().serverHopDelay))
                serverHop()
                break -- Para o loop pois vai trocar de servidor
            end
            
            task.wait(checkInterval)
        end
    end
end)

-- Prote√ß√£o contra kick/disconnect
game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
    if child.Name == "ErrorPrompt" then
        task.wait(1)
        serverHop()
    end
end)

print("üéÆ Script iniciado! Procurando pets...")
print(string.format("‚è∞ Server hop ap√≥s %d segundos sem encontrar pets", getgenv().serverHopDelay))
